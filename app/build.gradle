apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion Versions.compile_sdk
    defaultConfig {
        applicationId ApplicationId.application_id
        minSdkVersion Versions.min
        targetSdkVersion Versions.target_sdk
        versionCode Releases.version_code
        versionName Releases.version_name
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        dataBinding {
            enabled = true
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    kapt { generateStubs = true }

    defaultConfig{
        multiDexEnabled true
    }
}

configurations.all {
    resolutionStrategy {
        force 'org.jetbrains.kotlin:kotlin-stdlib:1.1.2-5'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    compile Libraries.kotlin_stdlib
    //noinspection GradleCompatible
    implementation SupportLibraries.appcompat
    implementation SupportLibraries.constraint_layout
    implementation SupportLibraries.design
    testImplementation TestLibraries.junit
    androidTestImplementation TestLibraries.support_test
    androidTestImplementation TestLibraries.espresso
    implementation Libraries.room
    kapt Libraries.room_compiler
    implementation Libraries.lifecycle
    compile Libraries.stetho
    kapt Libraries.databinding_compiler
    implementation Libraries.glide
    annotationProcessor Libraries.glide_compiler
    compile Libraries.dagger
    compile Libraries.dagger_support // if you use the support libraries
    annotationProcessor Libraries.dagger_android_processor
    compile Libraries.retrofit
    compile Libraries.gson
    implementation Libraries.logginginterceptor

}
